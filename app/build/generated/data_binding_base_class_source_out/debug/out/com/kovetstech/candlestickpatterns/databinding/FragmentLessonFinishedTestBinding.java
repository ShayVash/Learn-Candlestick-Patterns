// Generated by view binder compiler. Do not edit!
package com.kovetstech.candlestickpatterns.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kovetstech.candlestickpatterns.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLessonFinishedTestBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final ConstraintLayout finishedTestLayout;

  @NonNull
  public final TextView resultTitle;

  @NonNull
  public final Button returnButton;

  @NonNull
  public final TextView testScore;

  @NonNull
  public final Button tryAgainButton;

  private FragmentLessonFinishedTestBinding(@NonNull ConstraintLayout rootView,
      @NonNull View divider, @NonNull ConstraintLayout finishedTestLayout,
      @NonNull TextView resultTitle, @NonNull Button returnButton, @NonNull TextView testScore,
      @NonNull Button tryAgainButton) {
    this.rootView = rootView;
    this.divider = divider;
    this.finishedTestLayout = finishedTestLayout;
    this.resultTitle = resultTitle;
    this.returnButton = returnButton;
    this.testScore = testScore;
    this.tryAgainButton = tryAgainButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLessonFinishedTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLessonFinishedTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_lesson_finished_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLessonFinishedTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      ConstraintLayout finishedTestLayout = (ConstraintLayout) rootView;

      id = R.id.result_title;
      TextView resultTitle = ViewBindings.findChildViewById(rootView, id);
      if (resultTitle == null) {
        break missingId;
      }

      id = R.id.return_button;
      Button returnButton = ViewBindings.findChildViewById(rootView, id);
      if (returnButton == null) {
        break missingId;
      }

      id = R.id.test_score;
      TextView testScore = ViewBindings.findChildViewById(rootView, id);
      if (testScore == null) {
        break missingId;
      }

      id = R.id.try_again_button;
      Button tryAgainButton = ViewBindings.findChildViewById(rootView, id);
      if (tryAgainButton == null) {
        break missingId;
      }

      return new FragmentLessonFinishedTestBinding((ConstraintLayout) rootView, divider,
          finishedTestLayout, resultTitle, returnButton, testScore, tryAgainButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
